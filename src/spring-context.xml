<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<description>Spring Configuration</description>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  destroy-method="close">  
		<property name="driverClass">  
		    <value>com.mysql.jdbc.Driver</value>  
		</property>
		
		<property name="jdbcUrl">  
		    <value>jdbc:mysql://localhost/test?characterEncoding=utf-8</value>  
		</property>  
		<property name="user">  
		    <value>root</value>  
		</property>  
		<property name="password">  
		    <value>root</value>  
		</property>  
		 
		
		<property name="acquireIncrement">  
		    <value>2</value>  
		</property>  
		<property name="initialPoolSize">  
		    <value>2</value>  
		</property>  
		<property name="minPoolSize">  
		    <value>2</value>  
		</property>  
		<property name="maxPoolSize">  
		    <value>10</value>  
		</property>  
    </bean>
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
     	<property name="dataSource" ref="dataSource" />
     	<property name="mapperLocations">
			<list>				
				<value>classpath*:mapper/*.xml</value>
			</list>
		</property>  
     	<property name="configLocation" value="classpath:mybatis-config.xml"/>  
 	</bean> 
 	
 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  		<property name="basePackage" value="cn.dianduba.elearn" />
  		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
  		<property name="annotationClass" value="cn.dianduba.elearn.annotation.MyBaticsDao" />
	</bean>
	
	<bean id="userRealm" class="cn.dianduba.elearn.system.shiro.SystemRealm">  
  
	</bean>  
	
	<bean id="formAuthenticationFilter" class="cn.dianduba.elearn.system.shiro.SystemAuthenticationFilter">     
	</bean> 
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
		<property name="realm" ref="userRealm"/>    
	</bean>
	
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter"> 
        <property name="redirectUrl" value="/store.do" /> 
    </bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <property name="securityManager" ref="securityManager"/>  
	    <property name="loginUrl" value="/login.jsp"/>
	    <property name="successUrl" value="/account.do" />  
	    <!-- 
	    <property name="unauthorizedUrl" value="/unauthorized.jsp"/>  
	     -->
	    <property name="filters">  
	        <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map> 
	    </property>  
	    <property name="filterChainDefinitions">  
	        <value>
	         
	            /store.do = anon
	            /book.do = anon
	            /pageImage.do = anon
	            /regionMedia.do = anon
	            /bookPage.do = anon  
	            /unauthorized.jsp = anon
	            /register.jsp = anon
	            /register.do = anon
	            /css/**  = anon
	            /js/**  = anon
	            /jquery/**  = anon
	            /books/** = anon  
	            /login.jsp = authc 
	            /account.do = authc 
	            /logout = logout  
	            /** = user  
	        </value>  
	    </property>  
	</bean>  

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
 	  
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
    	<property name="securityManager" ref="securityManager"/>  
	</bean>
</beans>