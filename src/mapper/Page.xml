<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dianduba.elearn.dao.PageDao">
	<resultMap id="Page" type="cn.dianduba.elearn.Page">
		<result property="id" column="page_id"/>
		<result property="bookId" column="page_book_id"/>
		<result property="pageIndex" column="page_page_index"/>
		<result property="imageId" column="page_image_id"/>
		<association property="resource" resultMap="cn.dianduba.elearn.dao.ResourceDao.Resource"/>
		
    </resultMap>
	
	<sql id="page-columns">
		page.id as page_id,
		page.book_id as page_book_id,
		page.page_index as page_page_index,
		page.image_id as page_image_id
	</sql>
	
	<insert id="addPage" useGeneratedKeys="true" keyProperty="id" parameterType="cn.dianduba.elearn.Page">
		insert into page (
			book_id, page_index, image_id
		)
		values (
			#{bookId}, #{pageIndex}, #{imageId}
		)
	</insert>
	
	<delete id="deletePage">
		delete from page where id = #{id}
	</delete>
	
	<update id="updatePage">
		update page set
			book_id = #{bookId}, 
			page_index = #{pageIndex}, 
			image_id = #{imageId}
	</update>
	
	<select id="getPage" resultMap="Page">
		select 
			<include refid="page-columns" />, 
			<include refid="cn.dianduba.elearn.dao.ResourceDao.resource-columns" /> 
		from page
			 left join resource on page.image_id = resource.id  
		where page.id = #{pageId}
	</select>
	
	<select id="getPagesOfBook" resultMap="Page">
		select 
			<include refid="page-columns" />, 
			<include refid="cn.dianduba.elearn.dao.ResourceDao.resource-columns" /> 
		from 
			page
			left join resource on page.image_id = resource.id  
		where 
			page.book_id = #{bookId}
		order by 
			page.page_index asc
	</select>
</mapper>